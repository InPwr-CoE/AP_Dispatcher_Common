<Activity mc:Ignorable="sap sap2010" x:Class="AccountsPayable_AddQueueItem" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_RuntimeFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_AttachmentCollection" Type="InArgument(scg:IEnumerable(x:String))" />
    <x:Property Name="in_strAttachmentPrimaryKey" Type="InArgument(x:String)" />
    <x:Property Name="in_JobData" Type="InArgument(ui:CurrentJobInfo)" />
    <x:Property Name="in_PostProcessingRule" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_ERPVendorType" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentOutlookFolder" Type="InArgument(x:String)" />
  </x:Members>
  <this:AccountsPayable_AddQueueItem.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:AccountsPayable_AddQueueItem.in_Config>
  <this:AccountsPayable_AddQueueItem.in_RuntimeFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:AccountsPayable_AddQueueItem.in_RuntimeFilePath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>768,3899</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MEADP_AddFilestoQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>DocumentFormat.OpenXml.InkML</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Input:&#xA;1)  in_Config: Response from Intialize Configuration activity as a dictionary.&#xA;2) in_JobData: Get current job information (Process and Tenant name) to access Share drive folder&#xA;3) in_dicVendorInformation: Get the vendor information and push them in Orchestrator queue.&#xA;4) in_RuntimeFilePath: Runtime stagging log file path.&#xA;5) in_dicMailMetadata: Get the Mail Metadata details and push them in Orchestrator queue.&#xA;6) in_AttachmentCollection: Downloaded PDF Attachment collections.&#xA;7) in_strAttachmentPrimaryKey: Attachment Primary key from the Runtime stagging log file.&#xA;&#xA;Description: This workflow will push the PDF attachment to Queue with required reference information.&#xA;&#xA;Output: N/A" DisplayName="AccountsPayable_AddQueueItem" sap:VirtualizedContainerService.HintSize="778,3714" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="str_DriveFolderPath" />
      <Variable x:TypeArguments="x:String" Name="str_OrchestratorFolder" />
      <Variable x:TypeArguments="x:String" Name="str_QueueName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Started&quot;" sap:VirtualizedContainerService.HintSize="716,173" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;AccountsPayable_AddQueueItem: Started&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Check if Folder exist in the Share drive." DisplayName="Input Validation Stage" sap:VirtualizedContainerService.HintSize="716,1280" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_DriveFolderPath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("AP_SharedDrive_Attachment").ToString.Replace("&lt;TenantName&gt;",in_JobData.TenantName).Replace("&lt;VendorType&gt;",in_ERPVendorType).Replace("&lt;CurrentDate&gt;",DateTime.Now.ToString("yyMMMdd"))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_OrchestratorFolder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("AP_ExtractionQueue_Folder").ToString().Replace("&lt;VendorType&gt;", in_ERPVendorType)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_QueueName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("AP_ExtractionQueue_Name").ToString().Replace("&lt;VendorType&gt;", in_ERPVendorType)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[System.IO.Directory.Exists(str_DriveFolderPath)]" DisplayName="Handle Share drive Folder exist and throwing exception" sap:VirtualizedContainerService.HintSize="450,787" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then - Share drive folder Exist" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: PDF Attachment folder exist in Share drive. | &quot;+str_DriveFolderPath" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;AccountsPayable_AddQueueItem: PDF Attachment folder exist in Share drive. | &quot;+str_DriveFolderPath]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else - Share drive folder does not Exist" sap:VirtualizedContainerService.HintSize="416,374" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: PDF Attachment folder does not exist in Share drive. | &quot;+str_DriveFolderPath" sap:VirtualizedContainerService.HintSize="354,173" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;AccountsPayable_AddQueueItem: PDF Attachment folder does not exist in Share drive. | &quot;+str_DriveFolderPath]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <Throw DisplayName="Throw - New SystemException(&quot;AccountsPayable_AddQueueItem: PDF Attachment folder does not exist in Share drive. | &quot;+str_DriveFolderPath)" Exception="[New SystemException(&quot;AccountsPayable_AddQueueItem: PDF Attachment folder does not exist in Share drive. | &quot;+str_DriveFolderPath)]" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Copy the PDF attachment from local folder to Share drive folder and add them to DU queue with the required information." DisplayName="Core Process" sap:VirtualizedContainerService.HintSize="716,1817" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[index]" DisplayName="For Each Current file to Queue" sap:VirtualizedContainerService.HintSize="654,1666" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_AttachmentCollection]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentFile" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body - Add file to queue" sap:VirtualizedContainerService.HintSize="620,1529" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="str_TargetFilePath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Adding file to [ &quot;+in_Config(&quot;AP_TEMP_Orchestrator_DUQueueName&quot;).ToString + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(str_TargetFilePath)" sap:VirtualizedContainerService.HintSize="558,173" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;AccountsPayable_AddQueueItem: Processing Attachment path | &quot;+ currentFile]" />
              <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Adding file to [ &quot;+in_Config(&quot;AP_TEMP_Orchestrator_DUQueueName&quot;).ToString + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(str_TargetFilePath)" sap:VirtualizedContainerService.HintSize="558,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;AccountsPayable_AddQueueItem: Adding file to [ &quot;+str_QueueName + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(str_TargetFilePath)]" />
              <TryCatch DisplayName="Try Catch - Add File to Queue" sap:VirtualizedContainerService.HintSize="558,931" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Try -Add File to Queue" sap:VirtualizedContainerService.HintSize="520,671" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:RetryScope DisplayName="Retry Scope  - Add File to Queue" sap:VirtualizedContainerService.HintSize="458,583" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[If(in_Config(&quot;AP_ExtractionQueue_RetryCount&quot;) Is Nothing, 3, Convert.ToInt32(in_Config(&quot;AP_ExtractionQueue_RetryCount&quot;)))]" RetryInterval="[New TimeSpan(0,0,If(in_Config(&quot;AP_ExtractionQueue_RetryInterval&quot;) Is Nothing, 3, Convert.ToInt32(in_Config(&quot;AP_ExtractionQueue_RetryInterval&quot;))))]">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action - Add File to Queue" sap:VirtualizedContainerService.HintSize="416,305" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[str_OrchestratorFolder]" sap:VirtualizedContainerService.HintSize="354,217" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="[str_QueueName]" Reference="[Path.GetFileName(currentFile)]">
                              <ui:AddQueueItem.ItemInformation>
                                <InArgument x:TypeArguments="x:String" x:Key="PrimaryAttachmentKey">[in_strAttachmentPrimaryKey]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="AttachmentPath">[currentFile]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_Date">[in_TransactionItem.SpecificContent("Date").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_Time">[in_TransactionItem.SpecificContent("Time").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_SenderAddress">[in_TransactionItem.SpecificContent("FromAddress").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_Subject">[in_TransactionItem.SpecificContent("Subject").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_VendorName">[in_TransactionItem.SpecificContent("ERPVendorName").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Vendor_Id">[in_TransactionItem.SpecificContent("ERPVendorID").Tostring]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Vendor_Type">[in_TransactionItem.SpecificContent("ERPVendorName").Tostring]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Runtime_Staging_Log_FilePath">[in_RuntimeFilePath]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Message_Id">[in_TransactionItem.SpecificContent("Message Id").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="PostProcessingRule">[in_PostProcessingRule]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Vendor_GL_Account">[in_TransactionItem.SpecificContent("ERPVendorGLAccount").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Vendor_CostCenter">[in_TransactionItem.SpecificContent("ERPVendorCostCenter").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="Total_PDFAttachment_Count">[in_AttachmentCollection.Count]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="Current_PDFAttachment_Count">[(index+1)]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Current_Mail_Folder">[in_CurrentOutlookFolder]</InArgument>
                              </ui:AddQueueItem.ItemInformation>
                            </ui:AddQueueItem>
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:RetryScope>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="524,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Catch - Add File to Queue" sap:VirtualizedContainerService.HintSize="416,374" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Failed to add file in [ &quot;+str_QueueName + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(currentText) + &quot; | Exception message: &quot;+exception.Message" sap:VirtualizedContainerService.HintSize="354,173" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;AccountsPayable_AddQueueItem: Failed to add file in [ &quot;+str_QueueName + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(currentFile) + &quot; | Exception message: &quot;+exception.Message]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <Throw DisplayName="Throw - New SystemException(&quot;AccountsPayable_AddQueueItem: Failed to add file in [ &quot;+str_QueueName + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(currentText))" Exception="[New SystemException(&quot;AccountsPayable_AddQueueItem: Failed to add file in [ &quot;+str_QueueName + &quot; ] Queue | Filename: &quot;+Path.GetFileNameWithoutExtension(currentFile))]" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_4" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Added file to [ &quot;+str_QueueName + &quot; ] Queue with the required information.&quot;" sap:VirtualizedContainerService.HintSize="558,164" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;AccountsPayable_AddQueueItem: Added file to [ &quot;+str_QueueName + &quot; ] Queue with the required information.&quot;]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - &quot;AccountsPayable_AddQueueItem: Ended&quot;" sap:VirtualizedContainerService.HintSize="716,164" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;AccountsPayable_AddQueueItem: Ended&quot;]" />
  </Sequence>
</Activity>